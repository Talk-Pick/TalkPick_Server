jwt:
  secret: ${JWT_SECRET}
  accessTokenExpireTime: ${JWT_ACCESS_EXPIRE_TIME}

server:
  port: ${SERVER_PORT}
  tomcat:
    threads:
      max: ${THREADS_MAX}
    accept-count: ${ACCEPT_COUNT}

spring:
  config:
    import: optional:file:.env[.properties]
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    hikari:
      connection-timeout: ${CONNECTION_TIMEOUT}
      maximum-pool-size: ${MAXIMUM_POOL_SIZE}
      idle-timeout: ${IDLE_TIMEOUT}
      max-lifetime: ${MAX_LIFETIME}
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
  servlet:
    multipart:
      max-file-size: ${MAX_FILE_SIZE}
      max-request-size: ${MAX_REQUEST_SIZE}
  messages:
    basename: messages,errors

logging.level:
  org.hibernate.SQL: debug
  org.hibernate.orm.jdbc.bind: trace
  org.springframework.web.cors: debug
  org.apache.coyote.http11: debug
  logging:
    level:
      root: debug

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "prometheus"

kakao:
  client-id: ${KAKAO_CLIENT_ID}
  redirect-uri: ${KAKAO_REDIRECT_URI}
  response-type: ${KAKAO_RESPONSE_TYPE}

llm:
  base-url: ${LLM_BASE_URL}

resilience4j:
  circuitbreaker:
    instances:
      llm:
        registerHealthIndicator: true
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10s